{"version":3,"sources":["img/Getter (1).png","App.js","reportWebVitals.js","index.js"],"names":["App","useState","nome","email","mensagem","anexo","campos","setCampos","handleInputChange","event","target","name","files","value","className","src","img1","onSubmit","preventDefault","console","log","formData","FormData","Object","keys","forEach","key","append","axios","post","headers","_boundary","then","response","alert","data","setTimeout","window","location","reload","send","htmlFor","type","id","placeholder","onChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,MAA0B,uC,gCCiE1BA,MA5Df,WAEE,MAA4BC,mBAAS,CACnCC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,MAAO,KAJT,mBAAOC,EAAP,KAAeC,EAAf,KAOF,SAASC,EAAkBC,GACE,UAAtBA,EAAMC,OAAOC,KACdL,EAAOG,EAAMC,OAAOC,MAAQF,EAAMC,OAAOE,MAAM,GAE/CN,EAAOG,EAAMC,OAAOC,MAAQF,EAAMC,OAAOG,MAC3CN,EAAUD,GAuBZ,OACE,sBAAKQ,UAAU,YAAf,UACE,qBAAKC,IAAKC,IACV,uDACA,uBAAMC,SAxBZ,SAA0BR,GACxBA,EAAMS,iBACNC,QAAQC,IAAId,GAId,WACE,IAAMe,EAAW,IAAIC,SACrBC,OAAOC,KAAKlB,GAAQmB,SAAQ,SAAAC,GAAG,OAAIL,EAASM,OAAOD,EAAKpB,EAAOoB,OAC/DE,IAAMC,KAAK,QAASR,EAAU,CAC5BS,QAAS,CACT,eAAe,gCAAf,OAAgDT,EAASU,cAG5DC,MAAK,SAAAC,GAAQ,OAAIC,MAAM,8BAA8BD,EAASE,SAC/DC,YAAW,WACTC,OAAOC,SAASC,OAAO,KACtB,KAdDC,IAqBI,UACE,uBAAOC,QAAQ,QAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,QAAQhC,KAAK,QAAQiC,YAAY,sBAAsBC,SAAUrC,IAEvF,uBAAOiC,QAAQ,OAAf,kBACA,uBAAOC,KAAK,OAAOC,GAAG,OAAOhC,KAAK,OAAOiC,YAAY,qBAAqBC,SAAUrC,IAEpF,uBAAOiC,QAAQ,WAAf,sBACA,0BAAUE,GAAG,WAAWhC,KAAK,WAAWiC,YAAY,0BAA0B9B,UAAU,WAAW+B,SAAUrC,IAE7G,uBAAOiC,QAAQ,QAAf,mBACA,uBAAOC,KAAK,OAAOC,GAAG,QAAQhC,KAAK,QAAQkC,SAAUrC,IAErD,uBAAOkC,KAAK,SAAS7B,MAAM,kBC/CpBiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5ede0409.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Getter (1).8ac5d2ea.png\";","import React, {useState} from 'react';\nimport img1 from \"./img/Getter (1).png\";\nimport axios from \"axios\";\nimport './App.css';\n \nfunction App() {\n\n  const [campos, setCampos] = useState({\n    nome: '',\n    email: '',\n    mensagem: '',\n    anexo: ''\n});\n\nfunction handleInputChange(event){\n    if(event.target.name === \"anexo\")\n      campos[event.target.name] = event.target.files[0];\n    else\n      campos[event.target.name] = event.target.value;\n    setCampos(campos);\n}\n\nfunction handleFormSubmit(event){\n  event.preventDefault();\n  console.log(campos);\n  send();\n}\n\nfunction send(){\n  const formData = new FormData();\n  Object.keys(campos).forEach(key => formData.append(key, campos[key]));\n  axios.post('/send', formData, {\n    headers: {\n    'Content-Type': `multipart/form-data;boundary=${formData._boundary}`\n  }\n})\n.then(response => alert(\"Boleto Gerado Com Sucesso! \"+response.data));\nsetTimeout(function() {\n  window.location.reload(1);\n}, 5000);\n}\n\n  return (\n    <div className=\"container\">\n      <img src={img1}/>\n      <legend>recibo do locador</legend>\n      <form onSubmit={handleFormSubmit}>\n        <label htmlFor=\"email\">E-mail</label>\n        <input type=\"text\" id=\"email\" name=\"email\" placeholder=\"Email do locador(a)\" onChange={handleInputChange}/>\n \n        <label htmlFor=\"nome\">Nome</label>\n        <input type=\"text\" id=\"nome\" name=\"nome\" placeholder=\"Nome do locador(a)\" onChange={handleInputChange}/>\n \n        <label htmlFor=\"mensagem\">Mensagem</label>\n        <textarea id=\"mensagem\" name=\"mensagem\" placeholder=\"Escreva uma menssagem..\" className=\"textArea\" onChange={handleInputChange}></textarea>\n \n        <label htmlFor=\"anexo\">Anexo</label>\n        <input type=\"file\" id=\"anexo\" name=\"anexo\" onChange={handleInputChange}/>\n \n        <input type=\"submit\" value=\"Enviar\" />\n      </form>\n    </div>\n  );\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}